# Classe base abstrata
class Musico
  attr_reader :nome, :instrumento

  def initialize(nome, instrumento)
    @nome = nome
    @instrumento = instrumento
  end

  def tocar_partitura(peca)
    raise NotImplementedError, "Este m√©todo deve ser implementado nas subclasses"
  end

  def to_s
    "#{@nome} (#{@instrumento})"
  end
end

# Subclasse Pianista
class Pianista < Musico
  def tocar_partitura(peca)
    puts "#{@nome} est√° tocando #{peca} com paix√£o no piano üéπ"
  end
end

# Subclasse Violinista
class Violinista < Musico
  def tocar_partitura(peca)
    puts "#{@nome} executa #{peca} com emo√ß√£o no violino üéª"
  end
end

# Classe Maestro
class Maestro
  def initialize
    @musicos = []
  end

  def adicionar_musico(musico)
    @musicos << musico
  end

  def iniciar_ensaio(peca)
    puts "\nüéº Ensaio da pe√ßa '#{peca}' come√ßou!"
    @musicos.each { |m| m.tocar_partitura(peca) }
  end

  def mudar_foco(estado)
    novos_estados = @musicos.map { |m| "#{m.nome} agora est√° #{estado}!" }
    puts novos_estados
  end
end

# main
maestro = Maestro.new
maestro.adicionar_musico(Pianista.new("Kousei", "Piano"))
maestro.adicionar_musico(Violinista.new("Kaori", "Violino"))

print "Nome da pe√ßa: "
peca = gets.chomp
maestro.iniciar_ensaio(peca)
maestro.mudar_foco("concentrado üé∂")
