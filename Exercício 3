# Classe MicroondasUnidade (Composi√ß√£o)
class MicroondasUnidade
  def aquecer_por
    puts "üî• Unidade do Microondas aquecendo mensagem..."
  end
end

# Classe DMail (Agrega√ß√£o)
class DMail
  attr_reader :conteudo, :hora_envio

  def initialize(conteudo, hora_envio)
    @conteudo = conteudo
    @hora_envio = hora_envio
  end

  def to_s
    "D-Mail: '#{@conteudo}' enviada √†s #{@hora_envio}"
  end
end

# Classe principal TelefoneDeMicroondas
class TelefoneDeMicroondas
  def initialize
    @unidade = MicroondasUnidade.new
    @d_mails = []
  end

  def enviar_dmail
    print "Conte√∫do da D-Mail: "
    conteudo = gets.chomp
    print "Hora de envio (ex: 10:30): "
    hora = gets.chomp

    @unidade.aquecer_por
    novo = DMail.new(conteudo, hora)
    @d_mails << novo
    puts "‚úÖ D-Mail enviada!"
  end

  def listar_dmails(horario_corte)
    puts "\nüì® D-Mails enviadas ap√≥s #{horario_corte}:"
    resultado = @d_mails.select { |d| d.hora_envio > horario_corte }
    resultado.each { |d| puts d.to_s }
  end
end

# main
telefone = TelefoneDeMicroondas.new
telefone.enviar_dmail
telefone.enviar_dmail
print "Mostrar D-Mails enviadas ap√≥s qual hor√°rio? "
horario = gets.chomp
telefone.listar_dmails(horario)
